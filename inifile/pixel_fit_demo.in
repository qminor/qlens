fit label sim_pixelfit      # This labels the files that will be produced by the lens fitting
fit source_mode pixel       # Tells qlens we'll be using a pixellated source (rather than analytic or point sources)
fit method simplex          # downhill simplex method (plus optional simulated annealing)
data_pixel_size 0.049
inversion_method umfpack
sbmap loadimg sim_hst_image.fits
data_pixel_noise 0.00941285

#src_npixels 60 60                # This fixes the number of source pixels; otherwise it is set from "pixel_fraction" (see below)
#srcgrid -.257 0.12 -.37 0.026    # Fixes the source grid; otherwise, source grid is automatically positioned and sized during fit

adaptive_grid off              # adaptive Cartesian grid--probably not necessary unless you're including a subhalo and the
                               #     magnification gets high
fit regularization curvature    # the options are "norm", "gradient" and "curvature" (See Suyu et al. 2006 for details)

psf_threshold 1e-2             # This truncates the PSF when it falls below threshold*peak_height, to save computation time
sbmap loadpsf hst_psf.fits
sbmap loadmask mask.fits     # Loads a pixel mask

#sbmap unset_all_pixels
#sbmap set_data_annulus 0 -0.18 0.9 1.76 48 96
#sbmap set_data_annulus 0 -0.18 0.9 1.76 155 334

sbmap set_all_pixels
sbmap unset_low_sn_pixels 0.015
sbmap trim_mask_windows 4.0
#sbmap set_neighbor_pixels
pause

vary_regparam on        # Varies regularization parameter (definitely do this!)
regparam 20             # initial guess for regularization
pixel_fraction 0.8      # when the source pixel grid is automatically positioned and sized, the pixel sizes are chosen so that
                        #    the number of source pixels is approximately equal to pixel_fraction times the number of image pixels

#noise_threshold 10      # used for sizing the source pixel grid; says to include all mapped data pixels whose surface brightness is higher
                        ## than noise_threshold times the pixel noise

shear_components on      # Uses gamma_1, gamma_2 as external shear parameters instead of (gamma,theta)

# For reference, the following is the "true" model used to make the simulated data being fit here:
#fit lens alpha 1.3634 1.17163 0 0.963867 81.9 0.0102892 0.00358392 shear=0.0647257 -0.0575047

#fit lens alpha 1.3634 1.17163 0 0.963867 81.9 0.0102892 0.00358392 shear=0.0647257 -0.0575047
fit lens alpha 1.35 1.1 0 0.85 90 0 0 shear=0.05 0            # input model
1 1 0 1 1 1 1 1 1

outside_sb_prior on        # Imposes a penalty if surface brightness is produced outside the pixel mask (type 'help sbmap_settings' for info)
nimg_prior on              # This imposes a penalty chi-square if too few images are produced (defined by the threshold below)
nimg_threshold 1.4        	# Specify the minimum number of images you expect to get produced for nimg_prior; should be at least above 1
									# to avoid solutions where the source looks exactly like the images and no multiple imaging occurs

# To see how terrible the initial guess looks...
sbmap invert
sbmap plotimg

pause

simplex_temp0 1000    # for simulated annealing; the higher the temperature, the better the odds of finding a global solution
                        #    but it takes longer to run. If annealing doesn't work, switch to nested sampling or MCMC (more robust)

fit run
fit use_bestfit
sbmap invert

# Let's see how the final solution looks...
sbmap plotimg

